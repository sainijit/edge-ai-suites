apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-frigate
  labels:
    app.kubernetes.io/name: frigate
    app.kubernetes.io/instance: {{ .Release.Name }}
    app: frigate
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: frigate
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: frigate
        app.kubernetes.io/instance: {{ .Release.Name }}
        app: frigate
    spec:
      initContainers:
        - name: init-resources
          image: curlimages/curl:latest
          command: ["/bin/sh", "/scripts/init.sh"]
          env:
            - name: HTTP_PROXY
              value: "{{ .Values.global.proxy.http_proxy }}"
            - name: HTTPS_PROXY
              value: "{{ .Values.global.proxy.https_proxy }}"
            - name: NO_PROXY
              value: "{{ .Values.global.proxy.no_proxy }},localhost,127.0.0.1,mqtt-broker,nvr-event-router,nvr-event-router-ui,redis,.svc.cluster.local"
          volumeMounts:
            - name: {{ .Values.global.pvcName }}
              mountPath: /videos
            - name: init-script
              mountPath: /scripts
          securityContext:
            runAsUser: 0
            runAsGroup: 0

        # ✅ New initContainer to copy config file into writable /config
        - name: copy-frigate-config
          image: busybox
          command: ["/bin/sh", "-c", "cp /cm/config.yaml /config/config.yaml"]
          volumeMounts:
            - name: frigate-config-cm
              mountPath: /cm
            - name: frigate-config-dir
              mountPath: /config
        - name: wait-for-mqtt
          image: busybox:1.36
          command: ['sh', '-c', 'until nc -z mqtt-broker 1883; do echo waiting for mqtt; sleep 2; done;']

      containers:
        - name: frigate
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: 5000
          volumeMounts:
            - name: cache-volume
              mountPath: /tmp/cache
            - name: timezone
              mountPath: /etc/timezone
              readOnly: true
            - name: localtime
              mountPath: /etc/localtime
              readOnly: true
            # ✅ Writable config dir
            - name: frigate-config-dir
              mountPath: /config
            - name: {{ .Values.global.pvcName }}
              mountPath: /videos
          env:
            - name: HTTP_PROXY
              value: "{{ .Values.global.proxy.http_proxy }}"
            - name: HTTPS_PROXY
              value: "{{ .Values.global.proxy.https_proxy }}"
            - name: NO_PROXY
              value: "{{ .Values.global.proxy.no_proxy }},localhost,127.0.0.1,mqtt-broker,nvr-event-router,nvr-event-router-ui,redis,.svc.cluster.local"
            - name: FRIGATE_MQTT_USER
              value: "{{ .Values.env.FRIGATE_MQTT_USER }}"
            - name: FRIGATE_MQTT_PASSWORD
              value: "{{ .Values.env.FRIGATE_MQTT_PASSWORD }}"
            - name: OPENAI_BASE_URL
              value: "{{ .Values.env.OPENAI_BASE_URL }}"
            - name: OPENAI_API_KEY
              value: "{{ .Values.env.OPENAI_API_KEY }}"
          livenessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 40
            periodSeconds: 60
            timeoutSeconds: 20
            failureThreshold: 3

      volumes:
        - name: {{ .Values.global.pvcName }}
          persistentVolumeClaim:
            claimName: {{ .Values.global.pvcName }}

        - name: cache-volume
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi

        - name: timezone
          hostPath:
            path: /etc/timezone

        - name: localtime
          hostPath:
            path: /etc/localtime

        - name: init-script
          configMap:
            name: init-resources-script
            defaultMode: 0755

        # ✅ ConfigMap with your frigate.yaml
        - name: frigate-config-cm
          configMap:
            name: frigate-config

        # ✅ Writable config dir
        - name: frigate-config-dir
          emptyDir: {}
