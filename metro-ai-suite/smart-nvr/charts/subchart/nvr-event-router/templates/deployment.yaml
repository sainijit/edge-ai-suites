apiVersion: apps/v1
kind: Deployment
metadata:
  name: nvr-event-router
  labels:
    app: nvr-event-router
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: nvr-event-router
  template:
    metadata:
      labels:
        app: nvr-event-router
    spec:
      initContainers:
        - name: wait-for-mqtt
          image: busybox:1.36
          command: ['sh', '-c', 'until nc -z mqtt-broker 1883; do echo waiting for mqtt; sleep 2; done;']

        - name: wait-for-frigate
          image: busybox:1.36
          command: ['sh', '-c', 'until nc -z frigate 5000; do echo waiting for frigate; sleep 2; done;']

      containers:
        - name: nvr-event-router
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: 8000
          env:
            - name: MODE
              value: "{{ .Values.env.MODE }}"
            - name: FRIGATE_BASE_URL
              value: "{{ .Values.env.FRIGATE_BASE_URL }}"
            - name: VSS_SEARCH_URL
              value: "{{ .Values.env.VSS_SEARCH_IP }}:{{ .Values.env.VSS_SEARCH_PORT }}"
            - name: VSS_SUMMARY_URL
              value: "{{ .Values.env.VSS_SUMMARY_IP }}:{{ .Values.env.VSS_SUMMARY_PORT }}"
            - name: no_proxy
              value: "{{ .Values.env.no_proxy }}"
            - name: MQTT_USER
              value: "{{ .Values.env.MQTT_USER }}"
            - name: MQTT_PASSWORD
              value: "{{ .Values.env.MQTT_PASSWORD }}"
            - name: REDIS_PORT
              value: "{{ .Values.env.REDIS_PORT }}"
            - name: REDIS_HOST
              value: "{{ .Values.env.REDIS_HOST }}"
            - name: MQTT_BROKER
              value: "{{ .Values.env.MQTT_BROKER }}"   
            - name: MQTT_PORT
              value: "{{ .Values.env.MQTT_PORT }}"     

          readinessProbe:
            httpGet:
              path: /cameras   
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
            successThreshold: 1

          volumeMounts:
            - name: {{ .Values.volumes.localtime.name }}
              mountPath: {{ .Values.volumes.localtime.mountPath }}
              readOnly: {{ .Values.volumes.localtime.readOnly }}

      volumes:
        - name: {{ .Values.volumes.localtime.name }}
          hostPath:
            path: {{ .Values.volumes.localtime.hostPath }}
